@model IEnumerable<WebApplication3.Models.Procedure>

@{
    ViewData["Title"] = "Procedures Search";
    Patient currPatient = WebApplication3.Services.SessionExtensions.GetObjectFromJson<Patient>(Context.Session, "patient");
}

<h2>@ViewData["Title"]</h2>


<form id="__AjaxAntiForgeryForm" action="#" method="post"> @Html.AntiForgeryToken()</form>


<form class="form-inline" id="searchFormm" asp-action="Search">
    @if (currPatient.ID == 1)
    {
        <div class="col-lg-2">
            <div class="input-group">
                <span class="input-group-addon">
                    <input type="checkbox" id="unPaid" name="unPaid" value="@ViewBag.unPaid">
                </span>
                <label class="sr-only" for="forunPaid">Only Unpaid</label>
                <input type="text" id="forunPaid" class="form-control inputNumberOnly" disabled placeholder="Min Price" value="Only Unpaid?">
            </div>
        </div>
    }
    <div class="col-lg-2">
        <div class="input-group">
            <span class="input-group-addon">
                <input type="checkbox" id="cbMinPrice" aria-label="Checkbox for following text input" checked onChange="cbInputChange(this, 'minPrice')">
            </span>
            <label class="sr-only" for="minPrice">Min Procedures</label>
            <input type="number" class="form-control inputNumberOnly" min="0" id="minPrice" placeholder="Min Price" name="minPrice" value="@ViewBag.minPrice" onChange="inPriceChange(this, 'minPrice')">
        </div>
    </div>
    <div class="col-lg-2">
        <div class="input-group">
            <span class="input-group-addon">
                <input type="checkbox" id="cbMaxPrice" aria-label="Checkbox for following text input" checked onChange="cbInputChange(this, 'maxPrice')">
            </span>
            <label class="sr-only" for="maxPrice">Max Procedures</label>
            <input type="number" class="form-control inputNumberOnly" min="0" id="maxPrice" placeholder="Max Price" name="maxPrice" value="@ViewBag.maxPrice" onChange="inPriceChange(this, 'maxPrice')">
        </div>
    </div>
    <div class="col-lg-3">
        <div class="input-group">
            <span class="input-group-addon">
                <input type="checkbox" id="cbDate" aria-label="Checkbox for following text input" checked onChange="cbInputChange(this, 'pDate')">
            </span>
            <div class="input-group date" id='datetimepicker'>
                <label class="sr-only" for="pDate">Date</label>
                <input type='text' class="form-control" id="pDate" placeholder="Date" name="pDate" value="@ViewBag.pDate" />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
    </div>
    <button type="submit" id="btnSearch" class="btn btn-primary">Search</button>
    <a asp-action="Search" class="btn btn-default">Reset</a>
</form>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.IsPaid)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Time)
        </th>
        @if (currPatient.ID == 1)
        {
            <th>
                @Html.DisplayNameFor(model => model.PatientID)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.ProcedureTypeID)
        </th>
        <th></th>
    </tr>
    <tbody id="fbody">
        @foreach (var item in Model)
        {
            <tr id="@item.ID">
                <td>
                    @Html.DisplayFor(modelItem => item.IsPaid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time)
                </td>
                @if (currPatient.ID == 1)
                {
                    <td>
                        @item.Patient.FirstName @item.Patient.LastName
                    </td>
                }
                <td>
                    @item.ProcedureType.Name
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </button>
                        <div class="dropdown-menu" role="group">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                            @if (currPatient.ID == 1)
                            {
                                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-info btn-sm dropdown-item btnChosen" id="btnEdit">Edit</a>
                                <button type="button" class="btn btn-outline-danger btn-sm btnChosen dropdown-item" id="btnDelete" data-toggle="modal" data-target="#confirmDelete">Delete</button>
                            }   
                        </div>
                    </div>
                </td>
                <div class="modal fade" name="hey-@item.PatientID" id="patient-@item.PatientID" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header" style="background-color: #0275d8;color: white;">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                                <h4 class="modal-title" id="myModalLabel">Patient Details</h4>
                            </div>
                            <div class="modal-body">
                                <dl class="dl-horizontal">
                                    <dt>
                                        Identifier
                                    </dt>
                                    <dd>
                                        @item.Patient.Identifier
                                    </dd>
                                    <dt>
                                        First Name
                                    </dt>
                                    <dd>
                                        @item.Patient.FirstName
                                    </dd>
                                    <dt>
                                        Last Name
                                    </dt>
                                    <dd>
                                        @item.Patient.LastName
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(curr => curr.Patient.Birthday)
                                    </dt>
                                    <dd>
                                        @item.Patient.Birthday.ToString(@"dd\/MM\/yyyy")
                                    </dd>
                                    <dt>
                                        Email
                                    </dt>
                                    <dd>
                                        @item.Patient.Email
                                    </dd>
                                    <dt>
                                        Phone
                                    </dt>
                                    <dd>
                                        @item.Patient.Phone
                                    </dd>
                                </dl>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <a asp-controller="Patients" asp-action="Details" asp-route-id="@item.PatientID" type="button" class="btn btn-primary">Patient Page</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="type-@item.ProcedureTypeID" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header" style="background-color: #0275d8;color: white;">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                                <h4 class="modal-title" id="myModalLabel">Procedure Type Details</h4>
                            </div>
                            <div class="modal-body">
                                <dl class="dl-horizontal">
                                    <dt>
                                        Name
                                    </dt>
                                    <dd>
                                        @item.ProcedureType.Name
                                    </dd>
                                    <dt>
                                        Duration
                                    </dt>
                                    <dd>
                                        @item.ProcedureType.Duration
                                    </dd>
                                    <dt>
                                        Type
                                    </dt>
                                    <dd>
                                        @item.ProcedureType.Type.ToString()
                                    </dd>
                                    @if (currPatient.ID == 1)
                                    {
                                        <dt>
                                            Recommanded Price
                                        </dt>
                                        <dd>
                                            @item.ProcedureType.Price
                                        </dd>
                                    }
                                </dl>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <a asp-controller="ProcedureTypes" asp-action="Details" asp-route-id="@item.ProcedureTypeID" type="button" class="btn btn-primary">Procedure Type Page</a>
                            </div>
                        </div>
                    </div>
                </div>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #0275d8;color: white;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Procedure Delete</h4>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this procedure?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="DeletionConfirmed" data-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script type="text/javascript">
        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
            return data;
        };

        $(function () {
            // Bootstrap DateTimePicker v4
            $('#datetimepicker').datetimepicker({
                format: 'MM/DD/YYYY'
            });

            // Update the unpaid checkbox from the viewbag..
            if ('@ViewBag.unPaid' == "on") {
                $("#unPaid").prop('checked', true);
            }
        });


        $("#btnSearch").on('click', function (e) {
            if (($("#maxPrice").val() == "") || !($("#cbMaxPrice").is(':checked'))) {
                $("#maxPrice").prop('disabled', false);
                $("#maxPrice").val("999999");
            }
        });


        $(".inputNumberOnly").on('keyup', function (e) {
            var val = $(this).val();
            if (val.match(/[^0-9]/)) {
                $(this).val(val.replace(/[^0-9]/, ''));
            }
        });
        $(".patientNameInput").on('keyup', function (e) {
            var val = $(this).val();
            if (val.match(/[^A-Za-z\u0591-\u05F4"-']/)) {
                $(this).val(val.replace(/[^A-Za-z\u0591-\u05F4"-']/, ''));
            }
        });

        // Function that disable/enable input when the user click the checkbox
        function cbInputChange(cb, inputID) {
            // If the user checked the checkbox- enable the input
            if (cb.checked) {
                $("#" + inputID).prop('disabled', false);
            } else {
                // If the user unchecked the checkbox- disable the input
                $("#" + inputID).prop('disabled', true);
            }
        };

        function inPriceChange(input, inputId) {
            // If max was changed
            if (inputId == "maxPrice") {
                // If min is activated and is max is smaller than it
                if ($("#cbMinPrice").is(':checked') && $("#minPrice").val() > input.value) {
                    // Set the min price as the max price, so the min wont be bigger than max
                    $("#minPrice").val(input.value);
                }
            }

            // The opposite for min..
            if (inputId == "minPrice") {
                if ($("#cbMaxPrice").is(':checked') && $("#maxPrice").val() < input.value) {
                    $("#maxPrice").val(input.value);
                }
            }
        };

        var nIdChosen;
        $(".btnChosen").click(function () {
            nIdChosen = $(this).parent().parent().parent().parent().attr("id");
        });



        $("#DeletionConfirmed").click(function () {
            if (nIdChosen == null) {
                alertify.error("Error Occurred");
            } else {
                $.ajax({
                    url: '/Procedures/Delete',
                    type: 'Post',
                    data: AddAntiForgeryToken({ id: nIdChosen }),
                    success: (function (result) {

                        $("#" + nIdChosen).hide(500);
                        alertify.success("The Procedure was deleted");
                    }),
                    error: (function (xhr, status) {
                        alertify.error("Delete failed");
                    })
                });
            }
        });

    </script>
}














