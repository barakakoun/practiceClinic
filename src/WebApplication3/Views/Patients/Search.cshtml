@model IEnumerable<WebApplication3.Models.Patient>

@{
    ViewData["Title"] = "Patients Search";
}

<h2>@ViewData["Title"]</h2>


<form id="__AjaxAntiForgeryForm" action="#" method="post"> @Html.AntiForgeryToken()</form>


<form class="form-inline" id="searchFormm" asp-action="Search">
    <div class="col-lg-2">
        <div class="input-group">
            <span class="input-group-addon">
                <input type="checkbox" aria-label="Checkbox for following text input" checked onChange="cbInputChange(this, 'firstNameInput')">
            </span>
            <label class="sr-only" for="firstNameInput">First Name</label>
            <input type="text" class="form-control patientNameInput" id="firstNameInput" placeholder="First Name" name="strFirst" value="@ViewBag.firstName">
        </div>
    </div>
    <div class="col-lg-2">
        <div class="input-group">
            <span class="input-group-addon">
                <input type="checkbox" aria-label="Checkbox for following text input" checked onChange="cbInputChange(this, 'lastNameInput')">
            </span>
            <label class="sr-only" for="lastNameInput">Last Name</label>
            <input type="text" class="form-control patientNameInput" id="lastNameInput" placeholder="Last Name" name="strLast" value="@ViewBag.lastName">
        </div>
    </div>
    <div class="col-lg-2">
        <div class="input-group">
            <span class="input-group-addon">
                <input type="checkbox" aria-label="Checkbox for following text input" checked onChange="cbInputChange(this, 'minProcInput')">
            </span>
            <label class="sr-only" for="minProcInput">Min Procedures</label>
            <input type="number" class="form-control inputNumberOnly" min="0" id="minProcInput" placeholder="Min Procedures" name="nProc" value="@ViewBag.nProc">
        </div>
    </div>
    <div class="col-lg-2">
        <div class="input-group">
            <span class="input-group-addon">
                <input type="checkbox" aria-label="Checkbox for following text input" checked onChange="cbInputChange(this, 'arrAllergies')">
            </span>
            <label class="sr-only" for="arrAllergies">Max Allergies</label>
            <div class="col-md-5">
                @Html.ListBox("Allergies", ViewBag.Allergies as MultiSelectList, new { id = "arrAllergies", name = "arrAllergies", title = "Hold Ctrl for multiple items" })
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>
<a asp-action="Search" class="btn btn-default">Reset</a>


<input id="searchInput" value="First Name">
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Identifier)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th></th>
    </tr>
    <tbody id="fbody">
        @foreach (var item in Model)
        {
            <tr id="@item.ID">
                <td>
                    @Html.DisplayFor(modelItem => item.Identifier)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birthday)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </button>
                        <div class="dropdown-menu" role="group">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-info btn-sm btnChosen dropdown-item" id="btnEdit">Edit</a>
                            @if (item.ID != 1)
                            {
                                <button type="button" class="btn btn-outline-danger btn-sm btnChosen dropdown-item" id="btnDelete" data-toggle="modal" data-target="#confirmDelete">Delete</button>
                            }
                            <a asp-controller="Procedures" asp-action="Index" asp-route-nPatient="@item.ID" class="btn btn-outline-warning btn-sm btnChosen dropdown-item">Prodcedure</a>

                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #0275d8;color: white;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Patient Delete</h4>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this patient?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="DeletionConfirmed" data-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script type="text/javascript">
        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
            return data;
        };


        $(".inputNumberOnly").on('keyup', function (e) {
            var val = $(this).val();
            if (val.match(/[^0-9]/)) {
                $(this).val(val.replace(/[^0-9]/, ''));
            }
        });
        $(".patientNameInput").on('keyup', function (e) {
            var val = $(this).val();
            if (val.match(/[^A-Za-z\u0591-\u05F4"-']/)) {
                $(this).val(val.replace(/[^A-Za-z\u0591-\u05F4"-']/, ''));
            }
        });

        // Function that disable/enable input when the user click the checkbox
        function cbInputChange(cb, inputID) {
            // If the user checked the checkbox- enable the input
            if (cb.checked) {
                $("#" + inputID).prop('disabled', false);
            } else {
                // If the user unchecked the checkbox- disable the input
                $("#" + inputID).prop('disabled', true);
            }
        };

        var nIdChosen;
        $(".btnChosen").click(function () {
            nIdChosen = $(this).parent().parent().parent().parent().attr("id");
        });


        $("#DeletionConfirmed").click(function () {
            if (nIdChosen == null) {
                alertify.error("Error Occurred");
            }
            else if (nIdChosen == 1) {
                alertify.error("Admin cannot be deleted!");
            } else {
                $.ajax({
                    url: '/Patients/Delete',
                    type: 'Post',
                    data: AddAntiForgeryToken({ id: nIdChosen }),
                    success: (function (result) {
                        // Hide and notify the user
                        $("#" + nIdChosen).hide(500);

                        alertify.success("The patient was deleted");
                    }),
                    error: (function (xhr, status) {
                        alertify.error("Delete failed");
                    })
                });
            }
        });


        $("#searchInput").keyup(function () {
            //split the current value of searchInput
            var data = this.value.split(" ");
            //create a jquery object of the rows
            var jo = $("#fbody").find("tr");
            if (this.value == "") {
                jo.show();
                return;
            }
            //hide all the rows
            jo.hide();

            //Recusively filter the jquery object to get results.
            jo.filter(function (i, v) {
                var $t = $(this);
                for (var d = 0; d < data.length; ++d) {
                    if ($t.is(":contains('" + data[d] + "')")) {
                        return true;
                    }
                }
                return false;
            })
            //show the rows that match.
            .show();
        }).focus(function () {
            this.value = "";
            $(this).css({
                "color": "black"
            });
            $(this).unbind('focus');
        }).css({
            "color": "#C0C0C0"
        });
    </script>
}














