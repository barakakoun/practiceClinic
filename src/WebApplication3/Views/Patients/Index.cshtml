@model IEnumerable<WebApplication3.Models.Patient>

@{
    ViewData["Title"] = "Patients List";
    var isFirst = true;
}

<h2>@ViewData["Title"]</h2>

<p>
    <a asp-action="Create" class="btn btn-default">Create New</a>
    <a asp-action="Search" class="btn btn-default">Search</a>
</p>

<form id="__AjaxAntiForgeryForm" action="#" method="post"> @Html.AntiForgeryToken()</form>

<div class="btn-group" data-toggle="buttons" id="groupByForm">
    <label class="btn btn-primary active">
        <input type="radio" name="groupBy" class="CgroupBy" value="regularPatientView" autocomplete="off" checked> Regular
    </label>
    <label class="btn btn-primary">
        <input type="radio" name="groupBy" class="CgroupBy" value="BirthdayGroupBy" autocomplete="off"> Birthday
    </label>
    <label class="btn btn-primary">
        <input type="radio" name="groupBy" class="CgroupBy" value="LastNameGroupBy" autocomplete="off"> Last Name
    </label>
</div>

<table class="table PatientGroupBy" id="regularPatientView">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Identifier)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th></th>
    </tr>
    <tbody id="fbody">
        @foreach (var item in Model)
        {
            <tr id="@item.ID">
                <td>
                    @Html.DisplayFor(modelItem => item.Identifier)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birthday)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </button>
                        <div class="dropdown-menu" role="group">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-info btn-sm btnChosen dropdown-item" id="btnEdit">Edit</a>
                            @if (item.ID != 1)
                            {
                                <button type="button" class="btn btn-outline-danger btn-sm btnChosen dropdown-item" id="btnDelete" data-toggle="modal" data-target="#confirmDelete">Delete</button>
                            }
                            <a asp-controller="Procedures" asp-action="Index" asp-route-nPatient="@item.ID" class="btn btn-outline-warning btn-sm btnChosen dropdown-item">Prodcedure</a>

                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #0275d8;color: white;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Patient Delete</h4>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this patient?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="DeletionConfirmed" data-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>


<table class="table PatientGroupBy" id="LastNameGroupBy">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Identifier)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th></th>
    </tr>

    @foreach (var group in Model.OrderBy(model => model.LastName).GroupBy(model => model.LastName))
    {
        isFirst = true; 
        
        @foreach (var item in group)
        {
            <tr id="@Html.Encode(item.ID)">
                <td>
                    @Html.Encode(item.Identifier)
                </td>
                <td>
                    @Html.Encode(item.FirstName)
                </td>
                <td class="tdGroupByChosen">
                    @if (isFirst)
                    {
                        isFirst = false;
                        
                        @Html.Encode(group.Key)
                    }
                </td>
                <td>

                    @String.Format(@"{0:dd\/MM\/yyyy}", item.Birthday)
                </td>
                <td>
                    @Html.Encode(item.Email)
                </td>
                <td>
                    @Html.Encode(item.Phone)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </button>
                        <div class="dropdown-menu" role="group">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-info btn-sm btnChosen dropdown-item" id="btnEdit">Edit</a>
                            <a asp-controller="Procedures" asp-action="Index" asp-route-nPatient="@item.ID" class="btn btn-outline-warning btn-sm btnChosen dropdown-item">Prodcedure</a>
                        </div>
                    </div>
                </td>
            </tr>
        }
    }
</table>


<table class="table PatientGroupBy" id="BirthdayGroupBy">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th></th>
    </tr>

    @foreach (var group in Model.OrderBy(model => model.Birthday).GroupBy(model => model.Birthday))
    {
        isFirst = true;
        @foreach (var item in group)
        {
            <tr id="@Html.Encode(item.ID)">
                <td>
                    @Html.Encode(item.FirstName)
                </td>
                <td>
                    @Html.Encode(item.LastName)
                </td>
                <td class="tdGroupByChosen">
                    @if (isFirst)
                    {
                        isFirst = false;

                        @String.Format(@"{0:dd\/MM\/yyyy}", group.Key)
                    }
                </td>
                <td>
                    @Html.Encode(item.Email)
                </td>
                <td>
                    @Html.Encode(item.Phone)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </button>
                        <div class="dropdown-menu" role="group">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                            <button type="button" class="btn btn-outline-info btn-sm dropdown-item btnChosen" id="btnEdit">Edit</button>
                            <a asp-controller="Procedures" asp-action="Index" asp-route-nPatient="@item.ID" class="btn btn-outline-warning btn-sm btnChosen dropdown-item">Prodcedure</a>
                        </div>
                    </div>
                </td>
            </tr>
        }
    }
</table>


@section scripts {
    <script type="text/javascript">
        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
            return data;
        };

        $('.PatientGroupBy').not('#' + $('input[name=groupBy]:checked', '#groupByForm').val()).hide();


        $('#groupByForm label').on('change', function () {
            $('.PatientGroupBy').not('#' + $('input[name=groupBy]:checked', '#groupByForm').val()).hide();
            $('#' + $('input[name=groupBy]:checked', '#groupByForm').val()).show();
        });

        var nIdChosen;
        // This is to save the id of the patient was click
        $(".btnChosen").click(function () {
            nIdChosen = $(this).parent().parent().parent().parent().attr("id");
        });

        $(document).on('change', 'input:radio[id^="q_op_"]', function (event) {
            alert("click fired");
        });

        // Delete ajax request
        $("#DeletionConfirmed").click(function () {
            if (nIdChosen == null) {
                alertify.error("Error Occurred");
            }
            else if (nIdChosen == 1) {
                alertify.error("Admin cannot be deleted!");
            } else {
                $.ajax({
                    url: '/Patients/Delete',
                    type: 'Post',
                    data: AddAntiForgeryToken({ id: nIdChosen }),
                    success: (function (result) {
                        // Hide and notify the user
                        $("#" + nIdChosen).hide(500);
                        alertify.success("The patient was deleted");
                    }),
                    error: (function (xhr, status) {
                        alertify.error("Delete failed");
                    })
                });
            }
        });
    </script>
}














