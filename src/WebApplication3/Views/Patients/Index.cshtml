@model IEnumerable<WebApplication3.Models.Patient>

@{
    ViewData["Title"] = "Index";
    var isFirst = true;
}

<h2>Index</h2>


<p>
    <a asp-action="Create">Create New</a>
</p>
<form id="__AjaxAntiForgeryForm" action="#" method="post"> @Html.AntiForgeryToken()</form>

<div class="btn-group" data-toggle="buttons" id="groupByForm">
    <label class="btn btn-primary active">
        <input type="radio" name="groupBy" class="CgroupBy" value="regularPatientView" autocomplete="off" checked> Regular
    </label>
    <label class="btn btn-primary">
        <input type="radio" name="groupBy" class="CgroupBy" value="BirthdayGroupBy" autocomplete="off"> Birthday
    </label>
    <label class="btn btn-primary">
        <input type="radio" name="groupBy" class="CgroupBy" value="LastNameGroupBy" autocomplete="off"> Last Name
    </label>
</div>


<table class="table PatientGroupBy" id="regularPatientView">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Identifier)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr id="@item.ID">
            <td>
                @Html.DisplayFor(modelItem => item.Identifier)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Birthday)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>

                @*לנסות את זה!!!*@
                <div class="btn-group" role="group">
                    <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Options
                    </button>
                    <div class="dropdown-menu" role="group">
                        <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                        <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-info btn-sm btnChosen dropdown-item" id="btnEdit">Edit</a>
                        <button type="button" class="btn btn-outline-danger btn-sm btnChosen dropdown-item" id="btnDelete" data-toggle="modal" data-target="#confirmDelete">Delete</button>
                        <a asp-controller="Procedures" asp-action="Index" asp-route-nPatient="@item.ID" class="btn btn-outline-warning btn-sm btnChosen dropdown-item" id="btnEdit">Prodcedure</a>

                    </div>
                </div>
            </td>
        </tr>
    }
</table>

@*<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Patient Details</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Identifier)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Identifier)
                </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="DeletionConfirmed" data-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>*@

<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Patient Delete</h4>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this patient?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="DeletionConfirmed" data-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>


<table class="table PatientGroupBy" id="LastNameGroupBy">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Identifier)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th></th>
    </tr>

    @foreach (var group in Model.OrderBy(model => model.LastName).GroupBy(model => model.LastName))
    {
        isFirst = true; 
        
        @foreach (var item in group)
        {
            <tr id="@Html.Encode(item.ID)">
                <td>
                    @Html.Encode(item.Identifier)
                </td>
                <td>
                    @Html.Encode(item.FirstName)
                </td>
                <td class="tdGroupByChosen">
                    @if (isFirst)
                    {
                        isFirst = false;
                        
                        @Html.Encode(group.Key)
                    }
                </td>
                <td>

                    @String.Format(@"{0:dd\/MM\/yyyy}", item.Birthday)
                </td>
                <td>
                    @Html.Encode(item.Email)
                </td>
                <td>
                    @Html.Encode(item.Phone)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </button>
                        <div class="dropdown-menu" role="group">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                            <button type="button" class="btn btn-outline-info btn-sm dropdown-item btnChosen" id="btnEdit">Edit</button>
                            <button type="button" class="btn btn-outline-warning btn-sm dropdown-item btnChosen" id="btnProcedure">Prodcedure</button>
                        </div>
                    </div>
                </td>
            </tr>
        }
    }
</table>


<table class="table PatientGroupBy" id="BirthdayGroupBy">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th></th>
    </tr>

    @foreach (var group in Model.OrderBy(model => model.Birthday).GroupBy(model => model.Birthday))
    {
        isFirst = true;
        @foreach (var item in group)
        {
            <tr id="@Html.Encode(item.ID)">
                <td>
                    @Html.Encode(item.FirstName)
                </td>
                <td>
                    @Html.Encode(item.LastName)
                </td>
                <td class="tdGroupByChosen">
                    @if (isFirst)
                    {
                        isFirst = false;

                        @String.Format(@"{0:dd\/MM\/yyyy}", group.Key)
                    }
                </td>
                <td>
                    @Html.Encode(item.Email)
                </td>
                <td>
                    @Html.Encode(item.Phone)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </button>
                        <div class="dropdown-menu" role="group">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                            <button type="button" class="btn btn-outline-info btn-sm dropdown-item btnChosen" id="btnEdit">Edit</button>
                            <button type="button" class="btn btn-outline-warning btn-sm dropdown-item btnChosen" id="btnProcedure">Prodcedure</button>
                        </div>
                    </div>
                </td>
            </tr>
        }
    }
</table>


@section scripts {
    <script type="text/javascript">
        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
            return data;
        };

        //$('#detailsModal').on('show.bs.modal', function (e) {
        //    e.preventDefault();
        //        var url = $(e.relatedTarget).attr('href');


        //        $.get(url, function (data, status) {
        //            $("#confirmDelete").modal();
        //            //$('<div class="modal hide fade">' + data + '</div>').modal();
        //        //$("#initialPrice").val(data);
        //        }).success(function () { $('input:text:visible:first').focus(); });

        //    //var $modal = $(this),
        //    //    esseyId = e.relatedTarget.id;

        //})


        $('.PatientGroupBy').not('#' + $('input[name=groupBy]:checked', '#groupByForm').val()).hide();


        $('#groupByForm label').on('change', function () {
            $('.PatientGroupBy').not('#' + $('input[name=groupBy]:checked', '#groupByForm').val()).hide();
            $('#' + $('input[name=groupBy]:checked', '#groupByForm').val()).show();
        });
        //$("#btnDelete").click(function () {
        //    $('#confirmDelete')[0].showModal();
        //    transition = window.setTimeout(function () {
        //        $('#confirmDelete').addClass('dialog-scale');
        //    }, 0.5);
        //})

        //$('#cancelDelete').on('click', function () {
        //    $('#confirmDelete')[0].close();
        //    $('#confirmDelete').removeClass('dialog-scale');
        //    clearTimeout(transition);
        //});


        var nIdChosen;
        $(".btnChosen").click(function () {
            nIdChosen = $(this).parent().parent().parent().parent().attr("id");

            //$(".modal-body #bookId").val(myBookId);
            // As pointed out in comments,
            // it is superfluous to have to manually call the modal.
            // $('#addBookDialog').modal('show');
        });

        $(document).on('change', 'input:radio[id^="q_op_"]', function (event) {
            alert("click fired");
        });

        $("#DeletionConfirmed").click(function () {
            if (nIdChosen == null) {
                alertify.error("Error Occurred");
            }
            else if (nIdChosen == 1) {
                alertify.error("Admin cannot be deleted!");
            } else {
                $.ajax({
                    url: '/Patients/Delete',
                    type: 'Post',
                    data: AddAntiForgeryToken({ id: nIdChosen }),
                    success: (function (result) {

                        $("#" + nIdChosen).hide(500);
                        //$("#countofproducts").text("(" + result + ")");

                        //if (result == 0) {
                        //    $("#shoppingbag").css("display", "none");
                        //    $(".main-content").append($("<div>").text('לא קיימים פריטים בסל הקניות'));
                        //}

                        //var sum = $("#sum").text();
                        //$("#sum").text(sum - str[1])

                        alertify.success("The patient was deleted");
                    }),
                    error: (function (xhr, status) {
                        alertify.error("Delete failed");
                    })
                });
            }
        });


        //$("#DeletionConfirmed").click(function () {
        //    if (nIdChosen == null) {
        //        alertify.error("Error Occurred");
        //    }
        //    else if (nIdChosen == 1) {
        //        alertify.error("Admin cannot be deleted!");
        //    } else {
        //        $.ajax({
        //            url: '/Patients/Delete',
        //            type: 'Post',
        //            data: AddAntiForgeryToken({ id: nIdChosen }),
        //            success: (function (result) {

        //                $("#" + nIdChosen).hide(500);
        //                //$("#countofproducts").text("(" + result + ")");

        //                //if (result == 0) {
        //                //    $("#shoppingbag").css("display", "none");
        //                //    $(".main-content").append($("<div>").text('לא קיימים פריטים בסל הקניות'));
        //                //}

        //                //var sum = $("#sum").text();
        //                //$("#sum").text(sum - str[1])

        //                alertify.success("The patient was deleted");
        //            }),
        //            error: (function (xhr, status) {
        //                alertify.error("Delete failed");
        //            })
        //        });
        //    }
        //});

        //$("#buy").click(function () {

        //    $.ajax({
        //        url: '/ShoppingBag/Buy',
        //        type: 'Post',
        //        dataType: 'Json',
        //        success: (function (result) {

        //            if (result) {
        //                $("#shoppingBag").css("display", "none");
        //                $("#message").css("display", " block");
        //                $("#countOfProducts").text("(0)");

        //            }
        //            else {
        //                alert("רק משתמש קיים יכול לבצע הזמנה, אנא התחבר ונסה שנית");
        //            }
        //        }),
        //        error: (function (xhr, status) {
        //            alert(status);
        //        })
        //    });
        //});

        //$("#currencyNames").change(function () {

        //    var prevCurrency = $("#currency").val();
        //    var selCurrency = $("#currencyNames").val();
        //    if (selCurrency.length == 0) {
        //        selCurrency = "ILS";
        //    }

        //    $.ajax({
        //        url: '/WSConverter/CurrencyRate',
        //        type: 'Post',
        //        dataType: 'Json',
        //        data: { fromCurrency: prevCurrency, toCurrency: selCurrency },
        //        success: (function (result) {
        //            $("#currency").val(selCurrency);

        //            $(".priceConv").each(function () {
        //                var x = $(this).text();
        //                var d = Math.round((x * result) * 100) / 100;
        //                $(this).text(Math.round(d));
        //            });

        //            var oldSum = $("#sum").text();
        //            var s = Math.round((oldSum * result) * 100) / 100;
        //            $("#sum").text(Math.round(s));
        //        }),
        //        error: (function (xhr, status) {
        //            alert(status);
        //        })
        //    });
        //});

    </script>
}














