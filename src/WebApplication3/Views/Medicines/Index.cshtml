@model IEnumerable<WebApplication3.Models.Medicine>

@{
    ViewData["Title"] = "Medicines List";
    Patient currPatient = WebApplication3.Services.SessionExtensions.GetObjectFromJson<Patient>(Context.Session, "patient");
}

<h2>@ViewData["Title"]</h2>

@if (currPatient.ID == 1)
{
    <p>
        <a asp-action="Create" asp-route-PatientID="@ViewData["nCurrPatient"]" class="btn btn-default">Create New</a>
    </p>
}

<form id="__AjaxAntiForgeryForm" action="#" method="post"> @Html.AntiForgeryToken()</form>

<table class="table">
    <tr>
        <th class="col-lg-3">
                <div class="input-group" >
                    <label class="sr-only" for="searchName">Name</label>
                    <input id="searchName" placeholder="Name" type="text" class="form-control">
                </div>
        </th>
        <th class="col-lg-3">
            <div class="input-group">
                <label class="sr-only" for="searchDescription">Description</label>
                <input id="searchDescription" placeholder="Description" type="text" class="form-control">
            </div>
        </th>
        <th class="col-lg-3">
            <div class="input-group">
                <label class="sr-only" for="searchAddress">Address</label>
                <input id="searchAddress" placeholder="Buying Address" type="text" class="form-control">
            </div>
        </th>
        <th></th>
    </tr>
    <tbody id="fbody">
        @foreach (var item in Model)
        {
            <tr id="@Html.Encode(item.ID)">
                <td name="nName">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td name="nDescription">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td name="nAddress">
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </button>
                        <div class="dropdown-menu" role="group">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-success btn-sm btnChosen dropdown-item">Details</a>
                            @if (currPatient.ID == 1)
                            {
                                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-info btn-sm dropdown-item btnChosen" id="btnEdit">Edit</a>
                                <button type="button" class="btn btn-outline-danger btn-sm btnChosen dropdown-item" id="btnDelete" data-toggle="modal" data-target="#confirmDelete">Delete</button>
                            }
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #0275d8;color: white;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Procedure Delete</h4>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this procedure?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="DeletionConfirmed" data-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>

<div>
    <div id="map_canvas_all_medicines" style="height:250px; width:50%;"></div>
</div>

@section scripts {
    <script type="text/javascript">
        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
            return data;
        };

        var nIdChosen;
        $(".btnChosen").click(function () {
            nIdChosen = $(this).parent().parent().parent().parent().attr("id");
        });


        $("#DeletionConfirmed").click(function () {
            if (nIdChosen == null) {
                alertify.error("Error Occurred");
            }else {
                $.ajax({
                    url: '/Medicines/Delete',
                    type: 'Post',
                    data: AddAntiForgeryToken({ id: nIdChosen }),
                    success: (function (result) {

                        $("#" + nIdChosen).hide(500);
                        alertify.success("The Procedure was deleted");
                    }),
                    error: (function (xhr, status) {
                        alertify.error("Delete failed");
                    })
                });
            }
        });

        // For Description
        $("#searchDescription").keyup(function () {
            //split the current value of searchInput
            var data = this.value.split(" ");
            //create a jquery object of the rows
            var jo = $("#fbody").find("tr");
            if (this.value == "") {
                jo.show();
                return;
            }
            //hide all the rows
            jo.hide();

            //Recusively filter the jquery object to get results.
            jo.filter(function (i, v) {
                var $t = $(this);
                for (var d = 0; d < data.length; ++d) {
                    if ($t.context.children[1].innerText.toLowerCase().indexOf(data[d].toLowerCase()) >= 0) {
                        return true;
                    }
                }
                return false;
            })
            //show the rows that match
            .show();
        }).focus(function () {
            this.value = "";
            $(this).css({
                "color": "black"
            });
            $(this).unbind('focus');
        }).css({
            "color": "#C0C0C0"
        });

        // For name
        $("#searchName").keyup(function () {
            //split the current value of searchInput
            var data = this.value.split(" ");
            //create a jquery object of the rows
            var jo = $("#fbody").find("tr");
            if (this.value == "") {
                jo.show();
                return;
            }
            //hide all the rows
            jo.hide();

            //Recusively filter the jquery object to get results.
            jo.filter(function (i, v) {
                var $t = $(this);
                for (var d = 0; d < data.length; ++d) {
                    if ($t.context.children[0].innerText.toLowerCase().indexOf(data[d].toLowerCase()) >= 0) {
                        return true;
                    }
                }
                return false;
            })
            //show the rows that match
            .show();
        }).focus(function () {
            this.value = "";
            $(this).css({
                "color": "black"
            });
            $(this).unbind('focus');
        }).css({
            "color": "#C0C0C0"
        });

        // For address
        $("#searchAddress").keyup(function () {
            //split the current value of searchInput
            var data = this.value.split(" ");
            //create a jquery object of the rows
            var jo = $("#fbody").find("tr");
            if (this.value == "") {
                jo.show();
                return;
            }
            //hide all the rows
            jo.hide();

            //Recusively filter the jquery object to get results.
            jo.filter(function (i, v) {
                var $t = $(this);
                for (var d = 0; d < data.length; ++d) {
                    if ($t.context.children[2].innerText.toLowerCase().indexOf(data[d].toLowerCase()) >= 0) {
                        return true;
                    }
                }
                return false;
            })
            //show the rows that match
            .show();
        }).focus(function () {
            this.value = "";
            $(this).css({
                "color": "black"
            });
            $(this).unbind('focus');
        }).css({
            "color": "#C0C0C0"
        });

    </script>

<script>

        var mapAllMedicines;
        function initialize() {
            mapAllMedicines = new google.maps.Map(document.getElementById('map_canvas_all_medicines'), {
                center: {
                    lat: 32.0852999, lng: 34.78176759999999},
                zoom: 8
            });

            loadAddress();
        }

        function loadAddress() {
            var AllMedicines = @Html.Raw(Json.Serialize(Model));;
            for(var Medicine in AllMedicines) {
                $.ajax({url:"https://maps.googleapis.com/maps/api/geocode/json?address=" + AllMedicines[Medicine].Address + "&key=AIzaSyDQ92FbCEeGOqxAMaYXLI_xwI5B4UVSjto",success: function(result){
                    if (result.results.length > 0) {
                        var location = result.results[0].geometry.location;

                        var marker = new google.maps.Marker({
                            position: location,
                            map: mapAllMedicines,
                            title: result.results[0].formatted_address
                        });
                    }
                }});

            }


        }

</script>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQ92FbCEeGOqxAMaYXLI_xwI5B4UVSjto&callback=initialize"></script>
}